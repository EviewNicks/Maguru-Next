{
  "timestamp": "2025-03-17T15-00-26.988Z",
  "environment": "test",
  "numFailedTests": 0,
  "numPassedTests": 57,
  "numTotalTests": 57,
  "executionTime": "1742223624415ms",
  "testResults": [
    {
      "filePath": "D:\\2-Project\\Data_Project_6\\Maguru\\features\\manage-module\\__tests__\\integration\\modulePerformance.integration.test.ts",
      "failureMessages": [],
      "testResults": [
        {
          "title": "should respond in less than 300ms for GET /api/module",
          "status": "passed",
          "duration": 41,
          "failureMessages": []
        },
        {
          "title": "should handle load of 100 modules in less than 300ms",
          "status": "passed",
          "duration": 7,
          "failureMessages": []
        },
        {
          "title": "should handle load of 10000 modules in less than 300ms",
          "status": "passed",
          "duration": 5,
          "failureMessages": []
        }
      ]
    },
    {
      "filePath": "D:\\2-Project\\Data_Project_6\\Maguru\\features\\manage-module\\__tests__\\integration\\moduleApi.integration.test.ts",
      "failureMessages": [],
      "testResults": [
        {
          "title": "should return paginated modules",
          "status": "passed",
          "duration": 3,
          "failureMessages": []
        },
        {
          "title": "should handle errors when fetching modules",
          "status": "passed",
          "duration": 3,
          "failureMessages": []
        },
        {
          "title": "should create a new module",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should return module by ID",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should update module by ID",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should delete module by ID",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        }
      ]
    },
    {
      "filePath": "D:\\2-Project\\Data_Project_6\\Maguru\\features\\manage-module\\__tests__\\integration\\moduleStatusApi.integration.test.ts",
      "failureMessages": [],
      "testResults": [
        {
          "title": "should update module status",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should return 404 if module not found",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should handle missing user ID",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should handle errors when updating module status",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        }
      ]
    },
    {
      "filePath": "D:\\2-Project\\Data_Project_6\\Maguru\\features\\manage-module\\__tests__\\integration\\moduleAuditTrail.integration.test.ts",
      "failureMessages": [],
      "testResults": [
        {
          "title": "should log module creation in audit trail",
          "status": "passed",
          "duration": 2,
          "failureMessages": []
        },
        {
          "title": "should log module update in audit trail",
          "status": "passed",
          "duration": 7,
          "failureMessages": []
        },
        {
          "title": "should log module deletion in audit trail",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        }
      ]
    },
    {
      "filePath": "D:\\2-Project\\Data_Project_6\\Maguru\\features\\manage-module\\utils\\validateRequest.test.ts",
      "failureMessages": [],
      "testResults": [
        {
          "title": "should call the handler when validation passes",
          "status": "passed",
          "duration": 3,
          "failureMessages": []
        },
        {
          "title": "should parse string body to JSON",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should return 400 status with validation error details when validation fails",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should return 500 status when an unexpected error occurs",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        }
      ]
    },
    {
      "filePath": "D:\\2-Project\\Data_Project_6\\Maguru\\features\\manage-module\\utils\\moduleValidation.test.ts",
      "failureMessages": [],
      "testResults": [
        {
          "title": "should validate a valid module",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should validate a module without description",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should set default status to DRAFT if not provided",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should reject a module with title less than 5 characters",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should reject a module with title more than 100 characters",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should reject a module with invalid status",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should validate a valid update with all fields",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should validate a partial update with only title",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should validate a partial update with only description",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should validate a partial update with only status",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should reject an update with invalid title length",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should validate valid query parameters",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should coerce string numbers to actual numbers",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should set default values for missing page and limit",
          "status": "passed",
          "duration": 4,
          "failureMessages": []
        },
        {
          "title": "should reject negative page numbers",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should reject non-integer page numbers",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should reject invalid status values",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        }
      ]
    },
    {
      "filePath": "D:\\2-Project\\Data_Project_6\\Maguru\\features\\manage-module\\services\\moduleService.test.ts",
      "failureMessages": [],
      "testResults": [
        {
          "title": "should create a new module with provided data",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should set default status to DRAFT if not provided",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should return paginated modules",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should apply status filter if provided",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should apply search filter if provided",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should calculate correct pagination values",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should return module by id if found",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should return null if module not found",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should update module with all provided fields",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should update only provided fields",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle empty description correctly",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should delete module by id",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        }
      ]
    },
    {
      "filePath": "D:\\2-Project\\Data_Project_6\\Maguru\\features\\manage-module\\utils\\authMiddleware.test.ts",
      "failureMessages": [],
      "testResults": [
        {
          "title": "should call the handler when user is admin",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should return 401 when user is not authenticated",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should return 403 when user is not admin",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        }
      ]
    },
    {
      "filePath": "D:\\2-Project\\Data_Project_6\\Maguru\\features\\manage-module\\utils\\auditMiddleware.test.ts",
      "failureMessages": [],
      "testResults": [
        {
          "title": "should log request information when handler is called",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should log anonymous for unauthenticated requests",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should log response information when res.json is called",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should omit request body for GET requests",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should log request body for non-GET requests",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        }
      ]
    }
  ]
}