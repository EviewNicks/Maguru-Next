{
  "timestamp": "2025-03-18T02-22-57.457Z",
  "environment": "test",
  "numFailedTests": 0,
  "numPassedTests": 39,
  "numTotalTests": 39,
  "executionTime": "1742264574025ms",
  "testResults": [
    {
      "filePath": "D:\\2-Project\\Data_Project_6\\Maguru\\features\\manage-module\\__tests__\\integration\\moduleErrorHandling.integration.test.ts",
      "failureMessages": [],
      "testResults": [
        {
          "title": "should return standardized error for invalid module data",
          "status": "passed",
          "duration": 8,
          "failureMessages": []
        },
        {
          "title": "should return standardized 404 error for non-existent module",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should return standardized 404 error when updating non-existent module",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should return standardized 500 error when service throws exception",
          "status": "passed",
          "duration": 2,
          "failureMessages": []
        },
        {
          "title": "should return standardized 401 error when user ID is missing",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        }
      ]
    },
    {
      "filePath": "D:\\2-Project\\Data_Project_6\\Maguru\\features\\manage-module\\__tests__\\integration\\modulePerformance.integration.test.ts",
      "failureMessages": [],
      "testResults": [
        {
          "title": "should respond in less than 300ms for GET /api/module",
          "status": "passed",
          "duration": 47,
          "failureMessages": []
        },
        {
          "title": "should handle load of 100 modules in less than 300ms",
          "status": "passed",
          "duration": 9,
          "failureMessages": []
        },
        {
          "title": "should handle load of 10000 modules in less than 300ms",
          "status": "passed",
          "duration": 9,
          "failureMessages": []
        }
      ]
    },
    {
      "filePath": "D:\\2-Project\\Data_Project_6\\Maguru\\features\\manage-module\\__tests__\\integration\\moduleFilter.integration.test.ts",
      "failureMessages": [],
      "testResults": [
        {
          "title": "should filter modules by DRAFT status",
          "status": "passed",
          "duration": 7,
          "failureMessages": []
        },
        {
          "title": "should filter modules by ACTIVE status",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should search modules by keyword",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should combine filter and search",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should handle pagination correctly",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should handle empty search results",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        }
      ]
    },
    {
      "filePath": "D:\\2-Project\\Data_Project_6\\Maguru\\features\\manage-module\\__tests__\\integration\\moduleValidation.integration.test.ts",
      "failureMessages": [],
      "testResults": [
        {
          "title": "should reject module creation with empty title",
          "status": "passed",
          "duration": 4,
          "failureMessages": []
        },
        {
          "title": "should reject module creation with short description",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should reject module creation with invalid status",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should reject module creation with missing fields",
          "status": "passed",
          "duration": 2,
          "failureMessages": []
        },
        {
          "title": "should accept valid module data",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should sanitize input to prevent XSS",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        }
      ]
    },
    {
      "filePath": "D:\\2-Project\\Data_Project_6\\Maguru\\features\\manage-module\\__tests__\\integration\\moduleAuth.integration.test.ts",
      "failureMessages": [],
      "testResults": [
        {
          "title": "should allow admin to create module",
          "status": "passed",
          "duration": 2,
          "failureMessages": []
        },
        {
          "title": "should allow admin to delete module",
          "status": "passed",
          "duration": 2,
          "failureMessages": []
        },
        {
          "title": "should reject module creation by mahasiswa",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should reject module deletion by mahasiswa",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should reject requests with missing authentication",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should handle auth service errors gracefully",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        }
      ]
    },
    {
      "filePath": "D:\\2-Project\\Data_Project_6\\Maguru\\features\\manage-module\\__tests__\\integration\\moduleApi.integration.test.ts",
      "failureMessages": [],
      "testResults": [
        {
          "title": "should return paginated modules",
          "status": "passed",
          "duration": 2,
          "failureMessages": []
        },
        {
          "title": "should handle errors when fetching modules",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should create a new module",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should return module by ID",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should update module by ID",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should delete module by ID",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        }
      ]
    },
    {
      "filePath": "D:\\2-Project\\Data_Project_6\\Maguru\\features\\manage-module\\__tests__\\integration\\moduleAuditTrail.integration.test.ts",
      "failureMessages": [],
      "testResults": [
        {
          "title": "should log module creation in audit trail",
          "status": "passed",
          "duration": 2,
          "failureMessages": []
        },
        {
          "title": "should log module update in audit trail",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should log module deletion in audit trail",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        }
      ]
    },
    {
      "filePath": "D:\\2-Project\\Data_Project_6\\Maguru\\features\\manage-module\\__tests__\\integration\\moduleStatusApi.integration.test.ts",
      "failureMessages": [],
      "testResults": [
        {
          "title": "should update module status",
          "status": "passed",
          "duration": 2,
          "failureMessages": []
        },
        {
          "title": "should return 404 if module not found",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        },
        {
          "title": "should handle missing user ID",
          "status": "passed",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle errors when updating module status",
          "status": "passed",
          "duration": 1,
          "failureMessages": []
        }
      ]
    }
  ]
}